@page "/MisVehiculos/Crear"

@using Clases
@using Repositorio
@inject IRepositorio Repositorio
@inject NavigationManager NavigationManager


<div class="card">
    <div class="card-header bg-dark">
        <div class="row">
            <div class="col-sm-12">
                <h2 style="font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif" class="text-info">Crear nuevo Vehículo</h2>
            </div>
        </div>
    </div>
    <div class="card-body">
        <EditForm Model="nuevoVehiculo" OnValidSubmit="@(() => ManejadorCrearVehiculo())">
            <DataAnnotationsValidator />
            <div class="container" style="padding:30px">
                <div class="form-group">
                    <div class="row">
                        <div class="col-sm-2">
                            <label>Matrícula</label>
                        </div>
                        <div class="col-sm-6">
                            <InputText @bind-Value="nuevoVehiculo.Matricula" class="form-control"> </InputText>
                            <ValidationMessage For="() => nuevoVehiculo.Matricula"></ValidationMessage>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-sm-2">
                            <label>Tipo de Vehículo</label>
                        </div>
                        <div class="col-sm-6">
                            <RadzenDropDown Data=@listaTipos TValue="string" @bind-Value=tipoSeleccionado>
                            </RadzenDropDown>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-sm-2">
                            <label>Asociale un Ciente</label>
                        </div>
                        <div class="col-sm-6">
                            <RadzenDropDownDataGrid Data="@listaClientes" TValue="int" TextProperty="NombreYApellidos" ValueProperty="idCliente"
                                                    AllowColumnResize="true" AllowFilteringByAllStringColumns="true"
                                                    @bind-Value="nuevoVehiculo.ClienteID" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowClear="true">
                                <Columns>
                                    <RadzenDropDownDataGridColumn Property="idCliente" Title="idCliente" Width="100px" />
                                    <RadzenDropDownDataGridColumn Property="NombreYApellidos" Title="Nombre" Width="200px" />

                                </Columns>
                                                
                            </RadzenDropDownDataGrid>
                        </div>
                    </div>
                </div>
                <br />
                <div class="form-group">
                    <div class="row">
                        <div class="col-sm-8">
                            <button type="submit" style="align-items:center" class="btn btn-success">Guardar Vehículo</button>
                        </div>
                    </div>
                </div>
            </div>
        </EditForm>
     </div>
    </div>

@code
{
        public List<string> listaTipos = new List<string>();
        public string tipoSeleccionado;
        private Vehiculos nuevoVehiculo = new Vehiculos();
        private List<Clientes> listaClientes = new List<Clientes>();

        private async Task ManejadorCrearVehiculo()
        {
            if (tipoSeleccionado == "Camión")
            {
                nuevoVehiculo.tipoVehiculo = 0;
            }
            if (tipoSeleccionado == "Autocaravana")
            {
                nuevoVehiculo.tipoVehiculo = 1;
            }
            if (tipoSeleccionado == "Turismo")
            {
                nuevoVehiculo.tipoVehiculo = 2;
            }
            var crearVehiculo = await Repositorio.CrearVehiculo(nuevoVehiculo);
            NavigationManager.NavigateTo("/MisVehiculos");
        }
        private async Task VuelvoAlClientes()
        {
            NavigationManager.NavigateTo("/MisVehiculos");
        }
        protected override async Task OnInitializedAsync()
        {
            listaTipos.Add("Camión");
            listaTipos.Add("Autocaravana");
            listaTipos.Add("Turismo");
            listaClientes = await Repositorio.GetClientes();

        }
}
