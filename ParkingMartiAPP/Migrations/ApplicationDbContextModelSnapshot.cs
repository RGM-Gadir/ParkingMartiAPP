// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkingMartiAPP.Data;

#nullable disable

namespace ParkingMartiAPP.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ParkingMartiAPP.Clases.Camiones", b =>
                {
                    b.Property<int>("idCamion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCamion"));

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<int?>("ClientesidCliente")
                        .HasColumnType("int");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCamion");

                    b.HasIndex("ClientesidCliente");

                    b.ToTable("Camiones");
                });

            modelBuilder.Entity("ParkingMartiAPP.Clases.Clientes", b =>
                {
                    b.Property<int>("idCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCliente"));

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CuentaBancaria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreYApellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poblacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ParkingMartiAPP.Clases.Facturas", b =>
                {
                    b.Property<int>("idFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idFactura"));

                    b.Property<decimal>("BaseImponible")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("ClienteID")
                        .HasColumnType("int");

                    b.Property<int?>("ClientesidCliente")
                        .HasColumnType("int");

                    b.Property<int>("ConvertidaAVerifactu")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaOperacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IVA")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("ImporteTotal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("MetodoDePago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroDeFactura")
                        .HasColumnType("int");

                    b.Property<int?>("ProveedorID")
                        .HasColumnType("int");

                    b.Property<int?>("ProveedoresidProveedor")
                        .HasColumnType("int");

                    b.Property<string>("QuiereMatriculas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Retencion")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("cantidad1")
                        .HasColumnType("int");

                    b.Property<int>("cantidad2")
                        .HasColumnType("int");

                    b.Property<int>("cantidad3")
                        .HasColumnType("int");

                    b.Property<int>("numeroProforma")
                        .HasColumnType("int");

                    b.Property<decimal>("precio1")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("precio2")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("precio3")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("idFactura");

                    b.HasIndex("ClientesidCliente");

                    b.HasIndex("ProveedoresidProveedor");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("ParkingMartiAPP.Clases.LineasFactura", b =>
                {
                    b.Property<int>("idLinea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idLinea"));

                    b.Property<decimal>("BaseImponible")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("IVA")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("ImporteTotal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Retencion")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("cantidad1")
                        .HasColumnType("int");

                    b.Property<int>("idFactura")
                        .HasColumnType("int");

                    b.Property<int>("idLineaEnFactura")
                        .HasColumnType("int");

                    b.Property<decimal>("precio1")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("idLinea");

                    b.ToTable("LineasFactura");
                });

            modelBuilder.Entity("ParkingMartiAPP.Clases.LineasProforma", b =>
                {
                    b.Property<int>("idLinea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idLinea"));

                    b.Property<decimal>("BaseImponible")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("IVA")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("ImporteTotal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Retencion")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("cantidad1")
                        .HasColumnType("int");

                    b.Property<int>("idLineaEnProforma")
                        .HasColumnType("int");

                    b.Property<int>("idProforma")
                        .HasColumnType("int");

                    b.Property<decimal>("precio1")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("idLinea");

                    b.ToTable("LineasProforma");
                });

            modelBuilder.Entity("ParkingMartiAPP.Clases.Plazas", b =>
                {
                    b.Property<int>("idPlaza")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPlaza"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacturaID")
                        .HasColumnType("int");

                    b.HasKey("idPlaza");

                    b.ToTable("Plazas");
                });

            modelBuilder.Entity("ParkingMartiAPP.Clases.Proformas", b =>
                {
                    b.Property<int>("idProforma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idProforma"));

                    b.Property<decimal>("BaseImponible")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaOperacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IVA")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("ImporteTotal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("MetodoDePago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroDeFactura")
                        .HasColumnType("int");

                    b.Property<int>("NumeroDeProforma")
                        .HasColumnType("int");

                    b.Property<int?>("ProveedorID")
                        .HasColumnType("int");

                    b.Property<string>("QuiereMatriculas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Retencion")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("cantidad1")
                        .HasColumnType("int");

                    b.Property<int>("cantidad2")
                        .HasColumnType("int");

                    b.Property<int>("cantidad3")
                        .HasColumnType("int");

                    b.Property<decimal>("precio1")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("precio2")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("precio3")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("idProforma");

                    b.ToTable("Proformas");
                });

            modelBuilder.Entity("ParkingMartiAPP.Clases.Proveedores", b =>
                {
                    b.Property<int>("idProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idProveedor"));

                    b.Property<string>("CIF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreYApellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poblacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idProveedor");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("ParkingMartiAPP.Clases.Trabajadores", b =>
                {
                    b.Property<int>("idTrabajador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idTrabajador"));

                    b.Property<string>("CIF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreYApellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poblacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("diasTrabajados")
                        .HasColumnType("int");

                    b.Property<int>("horasTrabajadas")
                        .HasColumnType("int");

                    b.Property<int>("numeroSeguridasSocial")
                        .HasColumnType("int");

                    b.Property<int>("vacaciones")
                        .HasColumnType("int");

                    b.HasKey("idTrabajador");

                    b.ToTable("Trabajadores");
                });

            modelBuilder.Entity("ParkingMartiAPP.Clases.Camiones", b =>
                {
                    b.HasOne("ParkingMartiAPP.Clases.Clientes", null)
                        .WithMany("Camiones")
                        .HasForeignKey("ClientesidCliente");
                });

            modelBuilder.Entity("ParkingMartiAPP.Clases.Facturas", b =>
                {
                    b.HasOne("ParkingMartiAPP.Clases.Clientes", null)
                        .WithMany("Facturas")
                        .HasForeignKey("ClientesidCliente");

                    b.HasOne("ParkingMartiAPP.Clases.Proveedores", null)
                        .WithMany("Facturas")
                        .HasForeignKey("ProveedoresidProveedor");
                });

            modelBuilder.Entity("ParkingMartiAPP.Clases.Clientes", b =>
                {
                    b.Navigation("Camiones");

                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("ParkingMartiAPP.Clases.Proveedores", b =>
                {
                    b.Navigation("Facturas");
                });
#pragma warning restore 612, 618
        }
    }
}
